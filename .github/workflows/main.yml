name: Deploy to EC2

on:
  push:
    branches:
      - develop
      - main
    paths:
      - 'backend-api/**'
      - '.github/workflows/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy code to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./backend-api/*"
          target: "/home/ubuntu/facedetection"
          rm: true  # Elimina los archivos existentes en el destino

      - name: Create config files
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/facedetection/backend-api

            # Crear archivo .env
            cat > .env <<EOF
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_S3_REGION_NAME=${{ secrets.AWS_S3_REGION_NAME }}
            AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }}
            AWS_S3_CUSTOM_DOMAIN=${{ secrets.AWS_STORAGE_BUCKET_NAME }}.s3.amazonaws.com
            MEDIA_URL=https://${{ secrets.AWS_STORAGE_BUCKET_NAME }}.s3.amazonaws.com/
            DEFAULT_FILE_STORAGE=storages.backends.s3boto3.S3Boto3Storage
            EOF

            # Crear archivo JSON de Firebase
            cat > config/eagle-vision-firebase.json <<'EOF'
            {
              "type": "service_account",
              "project_id": "${{ secrets.FIRE_BASE_PROJECT_ID }}",
              "private_key_id": "${{ secrets.FIREBASE_PRIVATE_KEY_ID }}",
              "private_key": "${{ secrets.FIREBASE_PRIVATE_KEY }}",
              "client_email": "firebase-adminsdk-5mnid@eagle-vision-2e6cb.iam.gserviceaccount.com",
              "client_id": "11375898870055028674",
              "auth_uri": "https://accounts.google.com/o/oauth2/auth",
              "token_uri": "https://oauth2.googleapis.com/token",
              "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
              "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-5mnid%40eagle-vision-2e6cb.iam.gserviceaccount.com",
              "universe_domain": "googleapis.com"
            }
            EOF

      - name: Install dependencies and restart services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/facedetection/backend-api

            # Instalar dependencias
            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
            pip install gunicorn
            sudo systemctl restart nginx
            gunicorn --workers 3 --timeout 300 --bind 127.0.0.1:8000 main.wsgi:application